/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */
/*
 * Generated by Digital. Don't modify this file!
 * Any changes will be lost if this file is regenerated.
 */

module asig (
  input O,
  input A,
  input B,
  input CBi,
  output CBo,
  output S
);
  wire s0;
  assign s0 = ~ A;
  assign CBo = ((A & CBi & ~ O) | (A & B & ~ O) | (s0 & CBi & O) | (s0 & B & O) | (B & CBi));
  assign S = ((s0 & ~ B & CBi) | (s0 & B & ~ CBi) | (A & ~ B & ~ CBi) | (A & B & CBi));
endmodule


module Suma_resta (
  input a1,
  input b1,
  input a0,
  input b0,
  input a3,
  input b3,
  input a2,
  input b2,
  input Op,
  output s1,
  output s0,
  output s3,
  output s2,
  output s4
);
  wire s5;
  wire s6;
  wire s7;
  // asig
  asig asig_i0 (
    .O( Op ),
    .A( a0 ),
    .B( b0 ),
    .CBi( 1'b0 ),
    .CBo( s5 ),
    .S( s0 )
  );
  // asig
  asig asig_i1 (
    .O( Op ),
    .A( a1 ),
    .B( b1 ),
    .CBi( s5 ),
    .CBo( s6 ),
    .S( s1 )
  );
  // asig
  asig asig_i2 (
    .O( Op ),
    .A( a2 ),
    .B( b2 ),
    .CBi( s6 ),
    .CBo( s7 ),
    .S( s2 )
  );
  // asig
  asig asig_i3 (
    .O( Op ),
    .A( a3 ),
    .B( b3 ),
    .CBi( s7 ),
    .CBo( s4 ),
    .S( s3 )
  );
endmodule
